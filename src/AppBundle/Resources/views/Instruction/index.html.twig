{% extends '::base.html.twig' %}
{% block title %}My Instruction Sessions{% endblock %}
{% block body -%}
    <nav id="instruction-navigation" class="navbar">
        <ul class="nav navbar-nav nav-pills">
            <li role="presentation" class="active"><a href="{{ path('instruction') }}"><span class="glyphicon glyphicon-dashboard"></span> My Instruction Dashboard</a></li>
            <li role="presentation"><a href="{{ path('groupinstruction') }}">My Group Sessions</a></li>
            <li role="presentation"><a href="{{ path('individualinstruction') }}">My Individual Sessions</a></li>
        </ul>
        {% include 'AppBundle:Instruction:search.html.twig' %}
    </nav>
            
    {# Page Heading #}
    {% set headingvars = {'headingcontent' : 'My Instruction Sessions', 'newbutton' : false } %}
    {% include 'snippets/pageHeading.html.twig' with headingvars %}
    
    {# Flash message in case a filter search wasn't properly formatted/submitted. #}
    {% for flash_message in app.session.flashBag.get('flash-danger') %}
        <div class="alert alert-danger">
            {{ flash_message }}
        </div>
    {% endfor %}
    
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-6">
            <section id="instruction-container">
                {% include 'AppBundle:Instruction:results-ajax.html.twig' %}
            </section>
        </div>
    </div>
{% endblock %}
{% block documentReady %} 
    
    //uses jQuery Tablesorter to sort columns for paginated results (http://tablesorter.com/)
    $('#jquerySortable_1').tablesorter({
        headers: {
            5: {
                sorter: false
            },
            6: {
                sorter: false
            }
        }
    });
    
    //refresh the page with the new number of records per page
    $(document).on('change', '#paginationMaxResults', function(){
        var maxItems = $('#paginationMaxResults').find(":selected").val();
        var $currentTab = $('ul#instruction-filter-list').find('li.active > a');
        
        var filterType = $currentTab.attr('id'); //pass the type of filter based on the currently-selected tab
        
        getInstructionSessions(maxItems, filterType);
    });
    
    //Handle session filtering (all, group, individual)
    $(document).on('click', '.filter-sessions', function(e){
        e.preventDefault();
        
        var maxItems = $('#paginationMaxResults').find(":selected").val();
        var filterType = $(this).attr('id');
        
        getInstructionSessions(maxItems, filterType);
    });
    
    //AJAX Pagination using KNP Pagination
    $(document).on('click', 'ul.pagination a', function(e){
        e.preventDefault();
        
        var href = $(this).attr('href')
        var pattern = "page=";
        var pageNumber = href.substr(href.indexOf(pattern) + pattern.length, href.length); //get the page number only (e.g. page=2 becomes 2)

        var maxItems = $('#paginationMaxResults').find(":selected").val();
        var $currentTab = $('ul#instruction-filter-list').find('li.active > a');
        
        var filterType = $currentTab.attr('id'); //pass the type of filter based on the currently-selected tab
        
        getInstructionSessions(maxItems, filterType, pageNumber)
    });
    
    /**
     * Sends the filtered instruction sessions AJAX request to the server.
     * Refreshes the section#instruction-container
     *
     * @var int maxItems  How many items to show per page?
     * @var String filterType  'filter-all', 'filter-group', or 'filter-indivdual'
     * @var int pageNumber  The current pagination page (optional; will default to page 1 if no value passed)
     */
    function getInstructionSessions(maxItems, filterType, pageNumber){
        ajaxObject = {
            url: '/internalapi/filterinstructions',
            data: {
                filter: filterType,
                maxItems: maxItems,
                page: pageNumber,
            },
            type: 'GET',
        };

        $.ajax(ajaxObject)
            .success(function(data,status,xhr) {
                $('#instruction-container').html(data);
            })
            .fail(function(data,status,xhr) {
                console.log("Failed to load instruction data!");
            })
            .always(function(data,status,xhr) {
                console.log("DONE!");
            });
    }

    {{ parent() }}
{% endblock %}